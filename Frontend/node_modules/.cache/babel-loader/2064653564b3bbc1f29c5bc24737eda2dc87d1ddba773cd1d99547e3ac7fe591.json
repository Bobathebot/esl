{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/school-dashboard/Frontend/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/StudentDashboard.jsx\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState(\"\");\n\n  // Fetch available exams for the student\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const email = \"student@example.com\"; // Replace with actual student email, possibly from auth\n        const response = await axios.get(`http://localhost:5001/api/exams/student/${email}`);\n        setExams(response.data);\n      } catch (error) {\n        console.error(\"Error fetching exams:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExams();\n  }, []);\n  const handleSubmit = useCallback(async () => {\n    try {\n      const email = \"student@example.com\"; // Replace with actual student email\n      const examId = selectedExam._id;\n      const formattedAnswers = Object.keys(answers).map(questionId => ({\n        questionId,\n        answer: answers[questionId]\n      }));\n      const response = await axios.post(\"http://localhost:5001/api/submissions\", {\n        email,\n        examId,\n        answers: formattedAnswers\n      });\n      if (response.data.success) {\n        alert(\"Exam submitted successfully!\");\n        // Optionally, refresh exams or redirect\n      } else {\n        setSubmitError(\"Failed to submit exam.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting exam:\", error);\n      setSubmitError(\"An error occurred while submitting the exam.\");\n    }\n  }, [answers, selectedExam]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading exams...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : exams.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No exams available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: exams.map(exam => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: [\"Exam Link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: exam.link,\n            className: \"text-blue-500 underline\",\n            children: exam.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Deadline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 18\n          }, this), \" \", new Date(exam.deadline).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 18\n          }, this), \" \", exam.duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedExam(exam),\n          className: \"mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n          children: \"Take Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, exam._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), selectedExam && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 bg-white p-6 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: [\"Exam: \", selectedExam._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), selectedExam.questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answers[q.id] || \"\",\n          onChange: e => setAnswers({\n            ...answers,\n            [q.id]: e.target.value\n          }),\n          className: \"w-full border rounded p-2 mt-2\",\n          rows: \"4\",\n          placeholder: \"Type your answer here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)), submitError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: submitError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"MbMv5gEH+g+WqNVx4X39u/1uUkU=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","exams","setExams","selectedExam","setSelectedExam","answers","setAnswers","loading","setLoading","submitError","setSubmitError","fetchExams","email","response","get","data","error","console","handleSubmit","examId","_id","formattedAnswers","Object","keys","map","questionId","answer","post","success","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","exam","href","link","Date","deadline","toLocaleString","duration","onClick","questions","q","question","value","id","onChange","e","target","rows","placeholder","_c","$RefreshReg$"],"sources":["/Users/mohamed/school-dashboard/Frontend/src/pages/StudentDashboard.jsx"],"sourcesContent":["// src/pages/StudentDashboard.jsx\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst StudentDashboard = () => {\n  const [exams, setExams] = useState([]);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState(\"\");\n\n  // Fetch available exams for the student\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const email = \"student@example.com\"; // Replace with actual student email, possibly from auth\n        const response = await axios.get(`http://localhost:5001/api/exams/student/${email}`);\n        setExams(response.data);\n      } catch (error) {\n        console.error(\"Error fetching exams:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchExams();\n  }, []);\n\n  const handleSubmit = useCallback(async () => {\n    try {\n      const email = \"student@example.com\"; // Replace with actual student email\n      const examId = selectedExam._id;\n      const formattedAnswers = Object.keys(answers).map((questionId) => ({\n        questionId,\n        answer: answers[questionId],\n      }));\n\n      const response = await axios.post(\"http://localhost:5001/api/submissions\", {\n        email,\n        examId,\n        answers: formattedAnswers,\n      });\n\n      if (response.data.success) {\n        alert(\"Exam submitted successfully!\");\n        // Optionally, refresh exams or redirect\n      } else {\n        setSubmitError(\"Failed to submit exam.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting exam:\", error);\n      setSubmitError(\"An error occurred while submitting the exam.\");\n    }\n  }, [answers, selectedExam]);\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-3xl font-bold mb-6\">Student Dashboard</h1>\n      {loading ? (\n        <p>Loading exams...</p>\n      ) : exams.length === 0 ? (\n        <p>No exams available.</p>\n      ) : (\n        <div className=\"space-y-6\">\n          {exams.map((exam) => (\n            <div key={exam._id} className=\"bg-white p-6 rounded shadow\">\n              <h2 className=\"text-xl font-semibold\">Exam Link: <a href={exam.link} className=\"text-blue-500 underline\">{exam.link}</a></h2>\n              <p><strong>Deadline:</strong> {new Date(exam.deadline).toLocaleString()}</p>\n              <p><strong>Duration:</strong> {exam.duration} minutes</p>\n              <button\n                onClick={() => setSelectedExam(exam)}\n                className=\"mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n              >\n                Take Exam\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {selectedExam && (\n        <div className=\"mt-8 bg-white p-6 rounded shadow\">\n          <h2 className=\"text-2xl font-bold mb-4\">Exam: {selectedExam._id}</h2>\n          {selectedExam.questions.map((q) => (\n            <div key={q.id} className=\"mb-4\">\n              <p className=\"font-semibold\">{q.question}</p>\n              <textarea\n                value={answers[q.id] || \"\"}\n                onChange={(e) => setAnswers({ ...answers, [q.id]: e.target.value })}\n                className=\"w-full border rounded p-2 mt-2\"\n                rows=\"4\"\n                placeholder=\"Type your answer here...\"\n              ></textarea>\n            </div>\n          ))}\n          {submitError && <p className=\"text-red-500 mb-4\">{submitError}</p>}\n          <button\n            onClick={handleSubmit}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Submit Exam\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}