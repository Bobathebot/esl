{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/school-dashboard/Frontend/src/pages/Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Create the socket outside the component or inside a useRef so it does not recreate on each render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://127.0.0.1:5001\");\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Initial fetch of notifications (existing notifications from your backend)\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        console.log(\"Fetching initial notifications...\");\n        const response = await axios.get(\"http://127.0.0.1:5001/api/notifications\");\n        setNotifications(response.data);\n        console.log(\"Initial notifications fetched:\", response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch notifications:\", err);\n        setError(\"Failed to load notifications.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, []); // Run once on mount\n\n  useEffect(() => {\n    console.log(\"Setting up socket listeners...\");\n    // Confirm when socket connects\n    socket.on(\"connect\", () => {\n      console.log(\"Socket connected with ID:\", socket.id);\n    });\n\n    // Listen for newSubmission events from the backend\n    socket.on(\"newSubmission\", data => {\n      console.log(\"Notifications received newSubmission event:\", data);\n      const newNotif = {\n        _id: Date.now().toString(),\n        message: `New submission from ${data.studentName} (${data.studentEmail})`,\n        read: false,\n        createdAt: new Date(data.submittedAt).toISOString()\n      };\n      setNotifications(prev => [newNotif, ...prev]);\n    });\n\n    // Cleanup listeners on unmount\n    return () => {\n      console.log(\"Cleaning up socket listeners...\");\n      socket.off(\"connect\");\n      socket.off(\"newSubmission\");\n    };\n  }, []); // Run once on mount\n\n  const markAsRead = async id => {\n    try {\n      await axios.patch(`http://127.0.0.1:5001/api/notifications/${id}/read`);\n      setNotifications(prev => prev.map(notif => notif._id === id ? {\n        ...notif,\n        read: true\n      } : notif));\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n      alert(\"Failed to mark notification as read.\");\n    }\n  };\n  const deleteNotification = async id => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this notification?\");\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`http://127.0.0.1:5001/api/notifications/${id}`);\n      setNotifications(prev => prev.filter(notif => notif._id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete notification:\", err);\n      alert(\"Failed to delete notification.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading notifications...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg shadow-md flex justify-between items-center ${notif.read ? \"bg-white\" : \"bg-yellow-100\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 font-medium\",\n            children: notif.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm\",\n            children: new Date(notif.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [!notif.read && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markAsRead(notif._id),\n            className: \"bg-green-500 text-white px-3 py-1 rounded-full text-sm hover:bg-green-600\",\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteNotification(notif._id),\n            className: \"bg-red-500 text-white px-3 py-1 rounded-full text-sm hover:bg-red-600\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, notif._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"HYXv6efRyy5auYA1tvkhQo8Nqas=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","io","jsxDEV","_jsxDEV","socket","Notifications","_s","notifications","setNotifications","loading","setLoading","error","setError","fetchNotifications","console","log","response","get","data","err","on","id","newNotif","_id","Date","now","toString","message","studentName","studentEmail","read","createdAt","submittedAt","toISOString","prev","off","markAsRead","patch","map","notif","alert","deleteNotification","confirmDelete","window","confirm","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/mohamed/school-dashboard/Frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\n// Create the socket outside the component or inside a useRef so it does not recreate on each render\nconst socket = io(\"http://127.0.0.1:5001\");\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Initial fetch of notifications (existing notifications from your backend)\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        console.log(\"Fetching initial notifications...\");\n        const response = await axios.get(\"http://127.0.0.1:5001/api/notifications\");\n        setNotifications(response.data);\n        console.log(\"Initial notifications fetched:\", response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch notifications:\", err);\n        setError(\"Failed to load notifications.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNotifications();\n  }, []); // Run once on mount\n\n  useEffect(() => {\n    console.log(\"Setting up socket listeners...\");\n    // Confirm when socket connects\n    socket.on(\"connect\", () => {\n      console.log(\"Socket connected with ID:\", socket.id);\n    });\n\n    // Listen for newSubmission events from the backend\n    socket.on(\"newSubmission\", (data) => {\n      console.log(\"Notifications received newSubmission event:\", data);\n      const newNotif = {\n        _id: Date.now().toString(),\n        message: `New submission from ${data.studentName} (${data.studentEmail})`,\n        read: false,\n        createdAt: new Date(data.submittedAt).toISOString(),\n      };\n      setNotifications((prev) => [newNotif, ...prev]);\n    });\n\n    // Cleanup listeners on unmount\n    return () => {\n      console.log(\"Cleaning up socket listeners...\");\n      socket.off(\"connect\");\n      socket.off(\"newSubmission\");\n    };\n  }, []); // Run once on mount\n\n  const markAsRead = async (id) => {\n    try {\n      await axios.patch(`http://127.0.0.1:5001/api/notifications/${id}/read`);\n      setNotifications((prev) =>\n        prev.map((notif) =>\n          notif._id === id ? { ...notif, read: true } : notif\n        )\n      );\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n      alert(\"Failed to mark notification as read.\");\n    }\n  };\n\n  const deleteNotification = async (id) => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this notification?\");\n    if (!confirmDelete) return;\n\n    try {\n      await axios.delete(`http://127.0.0.1:5001/api/notifications/${id}`);\n      setNotifications((prev) => prev.filter((notif) => notif._id !== id));\n    } catch (err) {\n      console.error(\"Failed to delete notification:\", err);\n      alert(\"Failed to delete notification.\");\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-3xl font-bold mb-6\">Notifications</h1>\n      {loading ? (\n        <p>Loading notifications...</p>\n      ) : error ? (\n        <p className=\"text-red-500\">{error}</p>\n      ) : notifications.length === 0 ? (\n        <p>No notifications available.</p>\n      ) : (\n        <div className=\"space-y-4\">\n          {notifications.map((notif) => (\n            <div\n              key={notif._id}\n              className={`p-4 rounded-lg shadow-md flex justify-between items-center ${\n                notif.read ? \"bg-white\" : \"bg-yellow-100\"\n              }`}\n            >\n              <div>\n                <p className=\"text-gray-800 font-medium\">{notif.message}</p>\n                <p className=\"text-gray-500 text-sm\">\n                  {new Date(notif.createdAt).toLocaleString()}\n                </p>\n              </div>\n              <div className=\"flex space-x-2\">\n                {!notif.read && (\n                  <button\n                    onClick={() => markAsRead(notif._id)}\n                    className=\"bg-green-500 text-white px-3 py-1 rounded-full text-sm hover:bg-green-600\"\n                  >\n                    Mark as Read\n                  </button>\n                )}\n                <button\n                  onClick={() => deleteNotification(notif._id)}\n                  className=\"bg-red-500 text-white px-3 py-1 rounded-full text-sm hover:bg-red-600\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Notifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,yCAAyC,CAAC;QAC3ET,gBAAgB,CAACQ,QAAQ,CAACE,IAAI,CAAC;QAC/BJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC9D,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,OAAO,CAACH,KAAK,CAAC,gCAAgC,EAAEQ,GAAG,CAAC;QACpDP,QAAQ,CAAC,+BAA+B,CAAC;MAC3C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERhB,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C;IACAX,MAAM,CAACgB,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBN,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEX,MAAM,CAACiB,EAAE,CAAC;IACrD,CAAC,CAAC;;IAEF;IACAjB,MAAM,CAACgB,EAAE,CAAC,eAAe,EAAGF,IAAI,IAAK;MACnCJ,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEG,IAAI,CAAC;MAChE,MAAMI,QAAQ,GAAG;QACfC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAC1BC,OAAO,EAAE,uBAAuBT,IAAI,CAACU,WAAW,KAAKV,IAAI,CAACW,YAAY,GAAG;QACzEC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,IAAIP,IAAI,CAACN,IAAI,CAACc,WAAW,CAAC,CAACC,WAAW,CAAC;MACpD,CAAC;MACDzB,gBAAgB,CAAE0B,IAAI,IAAK,CAACZ,QAAQ,EAAE,GAAGY,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXpB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CX,MAAM,CAAC+B,GAAG,CAAC,SAAS,CAAC;MACrB/B,MAAM,CAAC+B,GAAG,CAAC,eAAe,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,UAAU,GAAG,MAAOf,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMrB,KAAK,CAACqC,KAAK,CAAC,2CAA2ChB,EAAE,OAAO,CAAC;MACvEb,gBAAgB,CAAE0B,IAAI,IACpBA,IAAI,CAACI,GAAG,CAAEC,KAAK,IACbA,KAAK,CAAChB,GAAG,KAAKF,EAAE,GAAG;QAAE,GAAGkB,KAAK;QAAET,IAAI,EAAE;MAAK,CAAC,GAAGS,KAChD,CACF,CAAC;IACH,CAAC,CAAC,OAAOpB,GAAG,EAAE;MACZL,OAAO,CAACH,KAAK,CAAC,sCAAsC,EAAEQ,GAAG,CAAC;MAC1DqB,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAOpB,EAAE,IAAK;IACvC,MAAMqB,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,oDAAoD,CAAC;IAC1F,IAAI,CAACF,aAAa,EAAE;IAEpB,IAAI;MACF,MAAM1C,KAAK,CAAC6C,MAAM,CAAC,2CAA2CxB,EAAE,EAAE,CAAC;MACnEb,gBAAgB,CAAE0B,IAAI,IAAKA,IAAI,CAACY,MAAM,CAAEP,KAAK,IAAKA,KAAK,CAAChB,GAAG,KAAKF,EAAE,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZL,OAAO,CAACH,KAAK,CAAC,gCAAgC,EAAEQ,GAAG,CAAC;MACpDqB,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACErC,OAAA;IAAK4C,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3C7C,OAAA;MAAI4C,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzD3C,OAAO,gBACNN,OAAA;MAAA6C,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC7BzC,KAAK,gBACPR,OAAA;MAAG4C,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAErC;IAAK;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACrC7C,aAAa,CAAC8C,MAAM,KAAK,CAAC,gBAC5BlD,OAAA;MAAA6C,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElCjD,OAAA;MAAK4C,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBzC,aAAa,CAAC+B,GAAG,CAAEC,KAAK,iBACvBpC,OAAA;QAEE4C,SAAS,EAAE,8DACTR,KAAK,CAACT,IAAI,GAAG,UAAU,GAAG,eAAe,EACxC;QAAAkB,QAAA,gBAEH7C,OAAA;UAAA6C,QAAA,gBACE7C,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAET,KAAK,CAACZ;UAAO;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5DjD,OAAA;YAAG4C,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACjC,IAAIxB,IAAI,CAACe,KAAK,CAACR,SAAS,CAAC,CAACuB,cAAc,CAAC;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNjD,OAAA;UAAK4C,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5B,CAACT,KAAK,CAACT,IAAI,iBACV3B,OAAA;YACEoD,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACG,KAAK,CAAChB,GAAG,CAAE;YACrCwB,SAAS,EAAC,2EAA2E;YAAAC,QAAA,EACtF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDjD,OAAA;YACEoD,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACF,KAAK,CAAChB,GAAG,CAAE;YAC7CwB,SAAS,EAAC,uEAAuE;YAAAC,QAAA,EAClF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GA1BDb,KAAK,CAAChB,GAAG;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2BX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA5HID,aAAa;AAAAmD,EAAA,GAAbnD,aAAa;AA8HnB,eAAeA,aAAa;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}