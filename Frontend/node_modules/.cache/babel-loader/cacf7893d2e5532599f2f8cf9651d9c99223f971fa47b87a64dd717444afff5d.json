{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/school-dashboard/Frontend/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/StudentDashboard.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Exam ID from the URL\n  const navigate = useNavigate(); // For navigation after submission\n  const [exam, setExam] = useState(null);\n  const [assignedQuestion, setAssignedQuestion] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [timer, setTimer] = useState(null);\n  const [timeUp, setTimeUp] = useState(false);\n  const [validationError, setValidationError] = useState(\"\");\n  const [studentDetails, setStudentDetails] = useState({\n    email: \"\",\n    studentId: \"\"\n  });\n  const [isValidating, setIsValidating] = useState(false);\n\n  // Fetch exam details\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/exams/${id}`);\n        if (response.data.success) {\n          setExam(response.data.exam);\n        } else {\n          alert(\"Exam not found.\");\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch exam:\", error);\n        alert(\"Failed to fetch exam details.\");\n      }\n    };\n    fetchExam();\n  }, [id]);\n\n  // Handle student detail changes\n  const handleDetailChange = e => {\n    setStudentDetails({\n      ...studentDetails,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle student validation and assign question\n  const handleValidateDetails = async e => {\n    e.preventDefault();\n    setValidationError(\"\");\n    setIsValidating(true);\n    const {\n      email,\n      studentId\n    } = studentDetails;\n    if (!email || !studentId) {\n      setValidationError(\"Both email and student ID are required.\");\n      setIsValidating(false);\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/students/validate\", {\n        email,\n        studentId\n      });\n      if (response.data.success) {\n        // Assign a question\n        const assignResponse = await axios.post(`http://localhost:5001/api/exams/${id}/assign-question`, {\n          email\n        });\n        if (assignResponse.data.success) {\n          setAssignedQuestion(assignResponse.data.assignedQuestion);\n          // Initialize the timer\n          setTimer(exam.duration * 60);\n        } else {\n          setValidationError(assignResponse.data.error || \"Failed to assign question.\");\n        }\n      } else {\n        setValidationError(\"Invalid student details. Please try again.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error validating student details:\", error);\n      setValidationError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to validate student details.\");\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (timer !== null && timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            clearInterval(interval);\n            setTimeUp(true);\n            alert(\"Time is up! Submitting your exam.\");\n            handleSubmit();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [timer]);\n\n  // Handle answer input\n  const handleAnswerChange = e => {\n    setAnswers({\n      ...answers,\n      [assignedQuestion.id]: e.target.value\n    });\n  };\n\n  // Handle exam submission\n  const handleSubmit = async () => {\n    const {\n      email,\n      studentId\n    } = studentDetails;\n\n    // Validate that all questions have been answered\n    if (!answers[assignedQuestion.id] || answers[assignedQuestion.id].trim() === \"\") {\n      alert(\"Please answer the question before submitting.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/submissions\", {\n        email,\n        examId: id,\n        answers: [{\n          questionId: assignedQuestion.id,\n          answer: answers[assignedQuestion.id]\n        }]\n      });\n      if (response.data.success) {\n        setSubmissionResult(response.data.submission);\n        alert(\"Exam submitted successfully!\");\n        navigate(\"/\"); // Redirect to home or another page\n      } else {\n        alert(\"Failed to submit the exam.\");\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Failed to submit exam:\", error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Error submitting the exam. Please try again.\");\n    }\n  };\n  if (!exam) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: \"Loading exam details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-r from-blue-200 via-blue-300 to-blue-500 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl\",\n      children: [!assignedQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center mb-6\",\n          children: \"Enter Your Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleValidateDetails,\n          className: \"mb-6\",\n          children: [validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-100 text-red-600 p-2 mb-4 rounded\",\n            children: validationError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: studentDetails.email,\n              onChange: handleDetailChange,\n              className: \"mt-1 block w-full border rounded-md p-2\",\n              placeholder: \"Enter your email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentId\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Student ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"studentId\",\n              name: \"studentId\",\n              type: \"text\",\n              value: studentDetails.studentId,\n              onChange: handleDetailChange,\n              className: \"mt-1 block w-full border rounded-md p-2\",\n              placeholder: \"Enter your Student ID\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `w-full bg-blue-500 text-white py-2 rounded-md ${isValidating ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-blue-600\"}`,\n            disabled: isValidating,\n            children: isValidating ? \"Validating...\" : \"Start Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center mb-6\",\n          children: \"Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 font-bold text-center\",\n            children: [\"Time Remaining: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, \"0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-gray-100 p-4 rounded\",\n            children: assignedQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"border p-2 w-full mb-4 rounded\",\n            rows: \"3\",\n            placeholder: \"Type your answer...\",\n            value: answers[assignedQuestion.id] || \"\",\n            onChange: handleAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-4 py-2 rounded w-full disabled:opacity-50 hover:bg-blue-600\",\n          onClick: handleSubmit,\n          disabled: timeUp,\n          children: \"Submit Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), submissionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-yellow-100 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: \"Submission Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Submission ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), \" \", submissionResult._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Submitted At:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), \" \", new Date(submissionResult.submittedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), \" \", submissionResult.answers.reduce((acc, curr) => acc + (curr.analysis.score || 0), 0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Feedback:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), \" \", submissionResult.answers.map((ans, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Question \", idx + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), \" \", ans.analysis.feedback, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"suQO0YZdKbLFRYMjQR1D2egWXXU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","id","navigate","exam","setExam","assignedQuestion","setAssignedQuestion","answers","setAnswers","submissionResult","setSubmissionResult","timer","setTimer","timeUp","setTimeUp","validationError","setValidationError","studentDetails","setStudentDetails","email","studentId","isValidating","setIsValidating","fetchExam","response","get","data","success","alert","error","console","handleDetailChange","e","target","name","value","handleValidateDetails","preventDefault","post","assignResponse","duration","_error$response","_error$response$data","interval","setInterval","prev","clearInterval","handleSubmit","handleAnswerChange","trim","examId","questionId","answer","submission","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","placeholder","required","disabled","Math","floor","String","padStart","question","rows","onClick","_id","Date","submittedAt","toLocaleString","reduce","acc","curr","analysis","score","map","ans","idx","feedback","_c","$RefreshReg$"],"sources":["/Users/mohamed/school-dashboard/Frontend/src/pages/StudentDashboard.jsx"],"sourcesContent":["// frontend/src/pages/StudentDashboard.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst StudentDashboard = () => {\n  const { id } = useParams(); // Exam ID from the URL\n  const navigate = useNavigate(); // For navigation after submission\n  const [exam, setExam] = useState(null);\n  const [assignedQuestion, setAssignedQuestion] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [timer, setTimer] = useState(null);\n  const [timeUp, setTimeUp] = useState(false);\n  const [validationError, setValidationError] = useState(\"\");\n  const [studentDetails, setStudentDetails] = useState({\n    email: \"\",\n    studentId: \"\",\n  });\n  const [isValidating, setIsValidating] = useState(false);\n\n  // Fetch exam details\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/exams/${id}`);\n        if (response.data.success) {\n          setExam(response.data.exam);\n        } else {\n          alert(\"Exam not found.\");\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch exam:\", error);\n        alert(\"Failed to fetch exam details.\");\n      }\n    };\n\n    fetchExam();\n  }, [id]);\n\n  // Handle student detail changes\n  const handleDetailChange = (e) => {\n    setStudentDetails({ ...studentDetails, [e.target.name]: e.target.value });\n  };\n\n  // Handle student validation and assign question\n  const handleValidateDetails = async (e) => {\n    e.preventDefault();\n    setValidationError(\"\");\n    setIsValidating(true);\n\n    const { email, studentId } = studentDetails;\n\n    if (!email || !studentId) {\n      setValidationError(\"Both email and student ID are required.\");\n      setIsValidating(false);\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/students/validate\", {\n        email,\n        studentId,\n      });\n\n      if (response.data.success) {\n        // Assign a question\n        const assignResponse = await axios.post(`http://localhost:5001/api/exams/${id}/assign-question`, {\n          email,\n        });\n\n        if (assignResponse.data.success) {\n          setAssignedQuestion(assignResponse.data.assignedQuestion);\n          // Initialize the timer\n          setTimer(exam.duration * 60);\n        } else {\n          setValidationError(assignResponse.data.error || \"Failed to assign question.\");\n        }\n      } else {\n        setValidationError(\"Invalid student details. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error validating student details:\", error);\n      setValidationError(error.response?.data?.error || \"Failed to validate student details.\");\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (timer !== null && timer > 0) {\n      const interval = setInterval(() => {\n        setTimer((prev) => {\n          if (prev <= 1) {\n            clearInterval(interval);\n            setTimeUp(true);\n            alert(\"Time is up! Submitting your exam.\");\n            handleSubmit();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [timer]);\n\n  // Handle answer input\n  const handleAnswerChange = (e) => {\n    setAnswers({ ...answers, [assignedQuestion.id]: e.target.value });\n  };\n\n  // Handle exam submission\n  const handleSubmit = async () => {\n    const { email, studentId } = studentDetails;\n\n    // Validate that all questions have been answered\n    if (!answers[assignedQuestion.id] || answers[assignedQuestion.id].trim() === \"\") {\n      alert(\"Please answer the question before submitting.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/submissions\", {\n        email,\n        examId: id,\n        answers: [\n          {\n            questionId: assignedQuestion.id,\n            answer: answers[assignedQuestion.id],\n          },\n        ],\n      });\n\n      if (response.data.success) {\n        setSubmissionResult(response.data.submission);\n        alert(\"Exam submitted successfully!\");\n        navigate(\"/\"); // Redirect to home or another page\n      } else {\n        alert(\"Failed to submit the exam.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to submit exam:\", error);\n      alert(error.response?.data?.error || \"Error submitting the exam. Please try again.\");\n    }\n  };\n\n  if (!exam) return <div className=\"p-6\">Loading exam details...</div>;\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-blue-200 via-blue-300 to-blue-500 p-4\">\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl\">\n        {!assignedQuestion ? (\n          <div>\n            <h1 className=\"text-2xl font-bold text-center mb-6\">Enter Your Details</h1>\n\n            <form onSubmit={handleValidateDetails} className=\"mb-6\">\n              {validationError && (\n                <div className=\"bg-red-100 text-red-600 p-2 mb-4 rounded\">{validationError}</div>\n              )}\n              <div className=\"mb-4\">\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={studentDetails.email}\n                  onChange={handleDetailChange}\n                  className=\"mt-1 block w-full border rounded-md p-2\"\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label htmlFor=\"studentId\" className=\"block text-sm font-medium text-gray-700\">\n                  Student ID\n                </label>\n                <input\n                  id=\"studentId\"\n                  name=\"studentId\"\n                  type=\"text\"\n                  value={studentDetails.studentId}\n                  onChange={handleDetailChange}\n                  className=\"mt-1 block w-full border rounded-md p-2\"\n                  placeholder=\"Enter your Student ID\"\n                  required\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className={`w-full bg-blue-500 text-white py-2 rounded-md ${\n                  isValidating ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-blue-600\"\n                }`}\n                disabled={isValidating}\n              >\n                {isValidating ? \"Validating...\" : \"Start Exam\"}\n              </button>\n            </form>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"text-2xl font-bold text-center mb-6\">Exam</h1>\n\n            {/* Timer */}\n            <div className=\"mb-4\">\n              <p className=\"text-red-500 font-bold text-center\">\n                Time Remaining: {Math.floor(timer / 60)}:\n                {String(timer % 60).padStart(2, \"0\")}\n              </p>\n            </div>\n\n            {/* Assigned Question */}\n            <div className=\"mb-4\">\n              <p className=\"bg-gray-100 p-4 rounded\">{assignedQuestion.question}</p>\n              <textarea\n                className=\"border p-2 w-full mb-4 rounded\"\n                rows=\"3\"\n                placeholder=\"Type your answer...\"\n                value={answers[assignedQuestion.id] || \"\"}\n                onChange={handleAnswerChange}\n              />\n            </div>\n\n            {/* Submit Button */}\n            <button\n              className=\"bg-blue-500 text-white px-4 py-2 rounded w-full disabled:opacity-50 hover:bg-blue-600\"\n              onClick={handleSubmit}\n              disabled={timeUp}\n            >\n              Submit Exam\n            </button>\n          </div>\n        )}\n\n        {/* Submission Result */}\n        {submissionResult && (\n          <div className=\"mt-6 bg-yellow-100 p-4 rounded\">\n            <h3 className=\"font-semibold text-lg\">Submission Result</h3>\n            <p>\n              <strong>Submission ID:</strong> {submissionResult._id}\n            </p>\n            <p>\n              <strong>Submitted At:</strong>{\" \"}\n              {new Date(submissionResult.submittedAt).toLocaleString()}\n            </p>\n            <p>\n              <strong>Grade:</strong>{\" \"}\n              {submissionResult.answers.reduce((acc, curr) => acc + (curr.analysis.score || 0), 0)}%\n            </p>\n            <p>\n              <strong>Feedback:</strong>{\" \"}\n              {submissionResult.answers.map((ans, idx) => (\n                <span key={idx}>\n                  <strong>Question {idx + 1}:</strong> {ans.analysis.feedback}\n                  <br />\n                </span>\n              ))}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}