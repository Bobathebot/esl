{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/school-dashboard/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  // Fetch a random question from the backend\n  const fetchRandomQuestion = () => {\n    axios.get('http://localhost:5001/api/questions').then(response => {\n      const questions = response.data;\n      if (questions.length > 0) {\n        const randomIndex = Math.floor(Math.random() * questions.length);\n        setQuestion(questions[randomIndex]);\n      } else {\n        setQuestion('No questions available. Please ask your teacher to add questions.');\n      }\n    });\n  };\n\n  // Handle answer submission\n  const submitAnswer = () => {\n    if (!answer.trim()) {\n      alert('Answer cannot be empty!');\n      return;\n    }\n    alert(`Submitted answer: ${answer}`);\n    setAnswer('');\n  };\n\n  // Fetch a question when the page loads\n  useEffect(() => {\n    fetchRandomQuestion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bg-gray-100 p-4 rounded\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"border p-2 w-full mb-4\",\n      rows: \"5\",\n      placeholder: \"Write your answer here...\",\n      value: answer,\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      onClick: submitAnswer,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"KBlOD4OSFz86i1DMFX5dammd7Js=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","question","setQuestion","answer","setAnswer","fetchRandomQuestion","get","then","response","questions","data","length","randomIndex","Math","floor","random","submitAnswer","trim","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/mohamed/school-dashboard/src/pages/StudentDashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst StudentDashboard = () => {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  // Fetch a random question from the backend\n  const fetchRandomQuestion = () => {\n    axios.get('http://localhost:5001/api/questions').then((response) => {\n      const questions = response.data;\n      if (questions.length > 0) {\n        const randomIndex = Math.floor(Math.random() * questions.length);\n        setQuestion(questions[randomIndex]);\n      } else {\n        setQuestion('No questions available. Please ask your teacher to add questions.');\n      }\n    });\n  };\n\n  // Handle answer submission\n  const submitAnswer = () => {\n    if (!answer.trim()) {\n      alert('Answer cannot be empty!');\n      return;\n    }\n    alert(`Submitted answer: ${answer}`);\n    setAnswer('');\n  };\n\n  // Fetch a question when the page loads\n  useEffect(() => {\n    fetchRandomQuestion();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Student Dashboard</h1>\n      <div className=\"mb-4\">\n        <p className=\"bg-gray-100 p-4 rounded\">{question}</p>\n      </div>\n      <textarea\n        className=\"border p-2 w-full mb-4\"\n        rows=\"5\"\n        placeholder=\"Write your answer here...\"\n        value={answer}\n        onChange={(e) => setAnswer(e.target.value)}\n      />\n      <button\n        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n        onClick={submitAnswer}\n      >\n        Submit Answer\n      </button>\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,KAAK,CAACU,GAAG,CAAC,qCAAqC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClE,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;MAC/B,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;QACxB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,SAAS,CAACE,MAAM,CAAC;QAChET,WAAW,CAACO,SAAS,CAACG,WAAW,CAAC,CAAC;MACrC,CAAC,MAAM;QACLV,WAAW,CAAC,mEAAmE,CAAC;MAClF;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,CAAC,EAAE;MAClBC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACAA,KAAK,CAAC,qBAAqBf,MAAM,EAAE,CAAC;IACpCC,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdU,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAIqB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9D1B,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBtB,OAAA;QAAGqB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEnB;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACN1B,OAAA;MACEqB,SAAS,EAAC,wBAAwB;MAClCM,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAExB,MAAO;MACdyB,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA;MACEqB,SAAS,EAAC,0CAA0C;MACpDY,OAAO,EAAEf,YAAa;MAAAI,QAAA,EACvB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CArDID,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAuDtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}