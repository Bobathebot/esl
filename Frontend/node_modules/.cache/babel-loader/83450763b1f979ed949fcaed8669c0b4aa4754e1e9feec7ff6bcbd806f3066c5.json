{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/school-dashboard/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [studentInfo, setStudentInfo] = useState({\n    email: \"\",\n    phone: \"\"\n  });\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [timer, setTimer] = useState(300); // Timer in seconds (5 minutes)\n  const [analysisResult, setAnalysisResult] = useState(null); // Store NLP feedback\n\n  // Fetch a random question from the backend\n  const fetchRandomQuestion = () => {\n    axios.get(\"http://localhost:5001/api/questions\").then(response => {\n      const questions = response.data;\n      if (questions.length > 0) {\n        const randomIndex = Math.floor(Math.random() * questions.length);\n        setQuestion(questions[randomIndex].question);\n      } else {\n        setQuestion(\"No questions available. Please ask your teacher to add questions.\");\n      }\n    });\n  };\n\n  // Handle timer countdown\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(prev => prev > 0 ? prev - 1 : 0);\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n\n  // Submit the answer and perform NLP analysis\n  const submitAnswer = () => {\n    if (!answer.trim()) {\n      alert(\"Answer cannot be empty!\");\n      return;\n    }\n    if (timer === 0) {\n      alert(\"Time is up! You cannot submit the answer.\");\n      return;\n    }\n    axios.post(\"http://localhost:5001/api/analyze-essay\", {\n      essay: answer\n    }).then(response => {\n      setAnalysisResult(response.data); // Store analysis feedback\n      alert(\"Answer submitted and analyzed successfully!\");\n      setAnswer(\"\");\n      fetchRandomQuestion(); // Load a new question\n      setTimer(300); // Reset timer\n    }).catch(error => {\n      alert(\"Failed to submit and analyze answer. Please try again.\");\n      console.error(error);\n    });\n  };\n\n  // Simulate fetching student info after login\n  useEffect(() => {\n    const studentData = {\n      email: \"lilac@student.esl.com\",\n      // Replace with dynamic data from login\n      phone: \"123-456-7890\" // Replace with dynamic data from login\n    };\n    setStudentInfo(studentData);\n    fetchRandomQuestion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-r from-blue-200 via-blue-300 to-blue-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-lg rounded-lg p-6 w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-center mb-6\",\n        children: \"Essay Submission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bg-gray-100 p-4 rounded\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 font-bold text-center\",\n            children: [\"Time Remaining: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, \"0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"border p-2 w-full mb-4 rounded\",\n          rows: \"5\",\n          placeholder: \"Write your answer here...\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-4 py-2 rounded w-full\",\n          onClick: submitAnswer,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-yellow-100 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: \"Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-6\",\n          children: analysisResult.grammarMistakes.map((mistake, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: mistake.mistake\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), \": Corrected to \\\"\", mistake.correction, \"\\\" at position \", mistake.position]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Overall Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \" \", analysisResult.overallScore, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), \" \", analysisResult.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"1Jb3MQzwKkfuX7j8tTxqoTMJo0w=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","studentInfo","setStudentInfo","email","phone","question","setQuestion","answer","setAnswer","timer","setTimer","analysisResult","setAnalysisResult","fetchRandomQuestion","get","then","response","questions","data","length","randomIndex","Math","floor","random","interval","setInterval","prev","clearInterval","submitAnswer","trim","alert","post","essay","catch","error","console","studentData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","rows","placeholder","value","onChange","e","target","onClick","grammarMistakes","map","mistake","index","correction","position","overallScore","rating","_c","$RefreshReg$"],"sources":["/Users/mohamed/school-dashboard/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst StudentDashboard = () => {\n  const [studentInfo, setStudentInfo] = useState({ email: \"\", phone: \"\" });\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [timer, setTimer] = useState(300); // Timer in seconds (5 minutes)\n  const [analysisResult, setAnalysisResult] = useState(null); // Store NLP feedback\n\n  // Fetch a random question from the backend\n  const fetchRandomQuestion = () => {\n    axios.get(\"http://localhost:5001/api/questions\").then((response) => {\n      const questions = response.data;\n      if (questions.length > 0) {\n        const randomIndex = Math.floor(Math.random() * questions.length);\n        setQuestion(questions[randomIndex].question);\n      } else {\n        setQuestion(\n          \"No questions available. Please ask your teacher to add questions.\"\n        );\n      }\n    });\n  };\n\n  // Handle timer countdown\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer((prev) => (prev > 0 ? prev - 1 : 0));\n    }, 1000);\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n\n  // Submit the answer and perform NLP analysis\n  const submitAnswer = () => {\n    if (!answer.trim()) {\n      alert(\"Answer cannot be empty!\");\n      return;\n    }\n    if (timer === 0) {\n      alert(\"Time is up! You cannot submit the answer.\");\n      return;\n    }\n\n    axios\n      .post(\"http://localhost:5001/api/analyze-essay\", {\n        essay: answer,\n      })\n      .then((response) => {\n        setAnalysisResult(response.data); // Store analysis feedback\n        alert(\"Answer submitted and analyzed successfully!\");\n        setAnswer(\"\");\n        fetchRandomQuestion(); // Load a new question\n        setTimer(300); // Reset timer\n      })\n      .catch((error) => {\n        alert(\"Failed to submit and analyze answer. Please try again.\");\n        console.error(error);\n      });\n  };\n\n  // Simulate fetching student info after login\n  useEffect(() => {\n    const studentData = {\n      email: \"lilac@student.esl.com\", // Replace with dynamic data from login\n      phone: \"123-456-7890\", // Replace with dynamic data from login\n    };\n    setStudentInfo(studentData);\n    fetchRandomQuestion();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-blue-200 via-blue-300 to-blue-500\">\n      <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-lg\">\n        <h1 className=\"text-2xl font-bold text-center mb-6\">Essay Submission</h1>\n        <div>\n          {/* Display question */}\n          <div className=\"mb-4\">\n            <p className=\"bg-gray-100 p-4 rounded\">{question}</p>\n          </div>\n\n          {/* Display timer */}\n          <div className=\"mb-4\">\n            <p className=\"text-red-500 font-bold text-center\">\n              Time Remaining: {Math.floor(timer / 60)}:\n              {String(timer % 60).padStart(2, \"0\")}\n            </p>\n          </div>\n\n          {/* Answer input */}\n          <textarea\n            className=\"border p-2 w-full mb-4 rounded\"\n            rows=\"5\"\n            placeholder=\"Write your answer here...\"\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n          />\n\n          {/* Submit Button */}\n          <button\n            className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n            onClick={submitAnswer}\n          >\n            Submit Answer\n          </button>\n        </div>\n\n        {/* Display NLP Analysis Results */}\n        {analysisResult && (\n          <div className=\"mt-6 bg-yellow-100 p-4 rounded\">\n            <h3 className=\"font-semibold text-lg\">Feedback</h3>\n            <ul className=\"list-disc pl-6\">\n              {analysisResult.grammarMistakes.map((mistake, index) => (\n                <li key={index}>\n                  <strong>{mistake.mistake}</strong>: Corrected to \"\n                  {mistake.correction}\" at position {mistake.position}\n                </li>\n              ))}\n            </ul>\n            <p className=\"mt-2\">\n              <strong>Overall Score:</strong> {analysisResult.overallScore}%\n            </p>\n            <p>\n              <strong>Rating:</strong> {analysisResult.rating}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMmB,mBAAmB,GAAGA,CAAA,KAAM;IAChCjB,KAAK,CAACkB,GAAG,CAAC,qCAAqC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClE,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;MAC/B,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;QACxB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,SAAS,CAACE,MAAM,CAAC;QAChEb,WAAW,CAACW,SAAS,CAACG,WAAW,CAAC,CAACf,QAAQ,CAAC;MAC9C,CAAC,MAAM;QACLC,WAAW,CACT,mEACF,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd,MAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCf,QAAQ,CAAEgB,IAAI,IAAMA,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAE,CAAC;IAC/C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACrB,MAAM,CAACsB,IAAI,CAAC,CAAC,EAAE;MAClBC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACA,IAAIrB,KAAK,KAAK,CAAC,EAAE;MACfqB,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;IAEAlC,KAAK,CACFmC,IAAI,CAAC,yCAAyC,EAAE;MAC/CC,KAAK,EAAEzB;IACT,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAClCY,KAAK,CAAC,6CAA6C,CAAC;MACpDtB,SAAS,CAAC,EAAE,CAAC;MACbK,mBAAmB,CAAC,CAAC,CAAC,CAAC;MACvBH,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MAChBJ,KAAK,CAAC,wDAAwD,CAAC;MAC/DK,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;;EAED;EACAvC,SAAS,CAAC,MAAM;IACd,MAAMyC,WAAW,GAAG;MAClBjC,KAAK,EAAE,uBAAuB;MAAE;MAChCC,KAAK,EAAE,cAAc,CAAE;IACzB,CAAC;IACDF,cAAc,CAACkC,WAAW,CAAC;IAC3BvB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKuC,SAAS,EAAC,uGAAuG;IAAAC,QAAA,eACpHxC,OAAA;MAAKuC,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChExC,OAAA;QAAIuC,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzE5C,OAAA;QAAAwC,QAAA,gBAEExC,OAAA;UAAKuC,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBxC,OAAA;YAAGuC,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAEjC;UAAQ;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eAGN5C,OAAA;UAAKuC,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBxC,OAAA;YAAGuC,SAAS,EAAC,oCAAoC;YAAAC,QAAA,GAAC,kBAChC,EAACjB,IAAI,CAACC,KAAK,CAACb,KAAK,GAAG,EAAE,CAAC,EAAC,GACxC,EAACkC,MAAM,CAAClC,KAAK,GAAG,EAAE,CAAC,CAACmC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGN5C,OAAA;UACEuC,SAAS,EAAC,gCAAgC;UAC1CQ,IAAI,EAAC,GAAG;UACRC,WAAW,EAAC,2BAA2B;UACvCC,KAAK,EAAExC,MAAO;UACdyC,QAAQ,EAAGC,CAAC,IAAKzC,SAAS,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eAGF5C,OAAA;UACEuC,SAAS,EAAC,iDAAiD;UAC3Dc,OAAO,EAAEvB,YAAa;UAAAU,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGL/B,cAAc,iBACbb,OAAA;QAAKuC,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CxC,OAAA;UAAIuC,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnD5C,OAAA;UAAIuC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC3B3B,cAAc,CAACyC,eAAe,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjDzD,OAAA;YAAAwC,QAAA,gBACExC,OAAA;cAAAwC,QAAA,EAASgB,OAAO,CAACA;YAAO;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,qBAClC,EAACY,OAAO,CAACE,UAAU,EAAC,iBAAc,EAACF,OAAO,CAACG,QAAQ;UAAA,GAF5CF,KAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACL5C,OAAA;UAAGuC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBxC,OAAA;YAAAwC,QAAA,EAAQ;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC/B,cAAc,CAAC+C,YAAY,EAAC,GAC/D;QAAA;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ5C,OAAA;UAAAwC,QAAA,gBACExC,OAAA;YAAAwC,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC/B,cAAc,CAACgD,MAAM;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAhIID,gBAAgB;AAAA6D,EAAA,GAAhB7D,gBAAgB;AAkItB,eAAeA,gBAAgB;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}